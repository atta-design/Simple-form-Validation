{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\input-validation\\\\src\\\\input.js\";\nimport React from 'react';\nimport { validate } from './validators';\nimport { useState } from 'react';\nconst INPUT_STATES = {\n  UNTOUCHED: 'UNTOUCHED',\n  VALID: 'VALID',\n  INVALID: 'INVALID'\n};\n\nconst Input = props => {\n  const [value, setValue] = useState('atta');\n  const {\n    type,\n    label,\n    id,\n    validators,\n    errortext\n  } = props; // validate(value)\n  // console.log(validators)\n\n  for (const validator of validators) {\n    console.log();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-input\",\n    \"data-testid\": \"form-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, label), React.createElement(\"input\", {\n    type: type,\n    id: id,\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/input-validation/src/input.js"],"names":["React","validate","useState","INPUT_STATES","UNTOUCHED","VALID","INVALID","Input","props","value","setValue","type","label","id","validators","errortext","validator","console","log","e","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,WADQ;AAEnBC,EAAAA,KAAK,EAAE,OAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACvB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,MAAD,CAA9B;AAEE,QAAK;AAACS,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA,EAAZ;AAAeC,IAAAA,UAAf;AAA0BC,IAAAA;AAA1B,MAAqCP,KAA1C,CAHqB,CAIvB;AAEE;;AACA,OAAK,MAAMQ,SAAX,IAAwBF,UAAxB,EAAmC;AACjCG,IAAAA,OAAO,CAACC,GAAR;AACD;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,mBAAY,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQN,KAAR,CADF,EAEE;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,EAAE,EAAEE,EAAvB;AAA2B,IAAA,QAAQ,EAAGM,CAAD,IAAKT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASX,KAAV,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAUF,CApBD;;AAsBA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport {validate} from './validators';\nimport { useState } from 'react';\n\nconst INPUT_STATES = {\n  UNTOUCHED: 'UNTOUCHED',\n  VALID: 'VALID',\n  INVALID: 'INVALID'\n};\n\nconst Input = props => {\nconst[value,setValue]=useState('atta')\n\n  const{type,label,id,validators,errortext}=props\n// validate(value)\n\n  // console.log(validators)\n  for (const validator of validators){\n    console.log()\n  }\n   return (\n     <div className='form-input' data-testid=\"form-input\">\n       <label>{label}</label>\n       <input type={type} id={id} onChange={(e)=>setValue(e.target.value)} />\n       <p>\n\n\n       </p>\n     </div>\n   )\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}