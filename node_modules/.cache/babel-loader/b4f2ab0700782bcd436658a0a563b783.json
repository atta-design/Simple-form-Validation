{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\input-validation\\\\src\\\\input.js\";\nimport React from 'react';\nimport { validate } from './validators';\nimport { useState } from 'react';\nconst INPUT_STATES = {\n  UNTOUCHED: 'UNTOUCHED',\n  VALID: 'VALID',\n  INVALID: 'INVALID'\n};\n\nconst Input = props => {\n  const [value, setValue] = useState('');\n  const [status, setStatus] = useState('');\n  const {\n    type,\n    label,\n    id,\n    validators,\n    errortext\n  } = props;\n  validate(value, validators);\n  console.log(validate(value, validators));\n\n  if (validate(value, validators) === false) {\n    setStatus(INPUT_STATES.INVALID);\n  }\n\n  if (validate(value, validators) === true) {\n    setStatus(INPUT_STATES.VALID);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-input form-input--invalid\",\n    \"data-testid\": \"form-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, label), React.createElement(\"input\", {\n    type: type,\n    id: id,\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), status === INPUT_STATES.INVALID, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/input-validation/src/input.js"],"names":["React","validate","useState","INPUT_STATES","UNTOUCHED","VALID","INVALID","Input","props","value","setValue","status","setStatus","type","label","id","validators","errortext","console","log","e","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,WADQ;AAEnBC,EAAAA,KAAK,EAAE,OAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACvB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACS,MAAD,EAAQC,SAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAhC;AAEE,QAAK;AAACW,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA,EAAZ;AAAeC,IAAAA,UAAf;AAA0BC,IAAAA;AAA1B,MAAqCT,KAA1C;AACFP,EAAAA,QAAQ,CAACQ,KAAD,EAAOO,UAAP,CAAR;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACQ,KAAD,EAAOO,UAAP,CAApB;;AAEC,MAAGf,QAAQ,CAACQ,KAAD,EAAOO,UAAP,CAAR,KAA6B,KAAhC,EAAsC;AACrCJ,IAAAA,SAAS,CAACT,YAAY,CAACG,OAAd,CAAT;AACA;;AACD,MAAGL,QAAQ,CAACQ,KAAD,EAAOO,UAAP,CAAR,KAA6B,IAAhC,EAAqC;AACpCJ,IAAAA,SAAS,CAACT,YAAY,CAACE,KAAd,CAAT;AACA;;AACC,SACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,mBAAY,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQS,KAAR,CADF,EAEE;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,EAAE,EAAEE,EAAvB;AAA2B,IAAA,QAAQ,EAAGK,CAAD,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIGE,MAAM,KAAGR,YAAY,CAACG,OAJzB,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAcF,CA5BD;;AA8BA,eAAeC,KAAf","sourcesContent":["import React from 'react';\nimport {validate} from './validators';\nimport { useState } from 'react';\n\nconst INPUT_STATES = {\n  UNTOUCHED: 'UNTOUCHED',\n  VALID: 'VALID',\n  INVALID: 'INVALID'\n};\n\nconst Input = props => {\nconst[value,setValue]=useState('')\nconst[status,setStatus]=useState('')\n\n  const{type,label,id,validators,errortext}=props\nvalidate(value,validators)\nconsole.log(validate(value,validators)\n)\n if(validate(value,validators)===false){\n  setStatus(INPUT_STATES.INVALID)\n }\n if(validate(value,validators)===true){\n  setStatus(INPUT_STATES.VALID)\n }\n   return (\n     <div className='form-input form-input--invalid' data-testid=\"form-input\">\n       <label>{label}</label>\n       <input type={type} id={id} onChange={(e)=>setValue(e.target.value)} />\n\n       {status===INPUT_STATES.INVALID}\n       <p>\n\n        \n\n\n       </p>\n     </div>\n   )\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}